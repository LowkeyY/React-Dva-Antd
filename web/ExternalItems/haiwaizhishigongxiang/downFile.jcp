import com.kinglib.Connection;
import com.kinglib.Jacper;
import com.kinglib.util.Files;

import gpra.filesystem.HWUnits;
import gpra.filesystem.HWUserAuthUnit;
import gpra.filesystem.search.SearchRunningQueue;
import gpra.filesystem.task.HWTaskWorkUserOpt;
import gpra.filesystem.task.HWTaskWorkUserOpt.UserOptType;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;

import javax.servlet.http.HttpServletResponse;

import com.social.api.core.model.Dept;
import com.susing.upload.FileExtend;

//public class downFile{
@class{
	public void doPost(Jacper jacper) {
		boolean isLogin = jacper.setSession();
		String file_Id = jacper.getString("fileId");
		String userid = String.valueOf(jacper.getSession().uid);
		Connection conTmp = jacper.getConnection(HWUnits.HW_DBLINK);
		InputStream in = null;
		String file_upload = jacper.getString("file_upload");
		try {
			String[] row = HWUserAuthUnit.getAllowOptFilePath(conTmp, file_Id, String.valueOf(jacper.getSession().uid));
			if (row != null && row.length > 0) {
				if(row.length == 1){
					jacper.print("对不起，"+row[0]+"。");
					return;
				}
				row[1] = row[1].substring(5).replace("\\", "\\\\");
				file_upload = row[3];
				File file = new File(row[1]);
				HttpServletResponse res = jacper.getResponse();
				in = new FileInputStream(file);
				String str = StringFilter(row[2].endsWith("."+row[7]) ? row[2] : row[2] + "."+row[7]);
				str = new String(str.getBytes("gb2312"), "iso8859-1");
				res.setContentType(FileExtend.getContentType(str));
				res.setHeader("Content-Disposition", "attachment;filename=\""+ str + "\"");
				res.setHeader("Content-Length", String.valueOf(in.available()));
				res.setHeader("Accept-ranges", "bytes");
/*				if (!file_upload.equals(userid)) {
					conTmp.exec("update dir_integral_mgr set down_times=down_times+1,integral_total=integral_total+1 where user_id=?",new String[] { file_upload });
					conTmp.exec("update dir_integral_mgr t set t.ranking =(select num from (select row_number()over(order by integral_total desc) as num, rowid as rid from dir_integral_mgr)where t.rowid = rid)",new String[] {});
				}*/
				
				conTmp.exec("insert into DIR_DOWNLOAD_COUNT values(sys_guid(),?,?,'0',sysdate,?)",new String[]{file_Id , userid , jacper.getRequest().getRemoteAddr()});
				SearchRunningQueue.add(new HWTaskWorkUserOpt(file_Id  , userid , jacper.getRequest().getRemoteAddr() , UserOptType.DOWNLOAG));
				Files.copyRange(in, res.getOutputStream(), 1024);
			} else {
				jacper.print("对不起,您没有权限下载此文档,请提交查看申请并等待相关部门审批.");
			}

		} catch (Exception e) {
			e.printStackTrace();
			jacper.print("对不起,数据库中未找相应文档.");
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				conTmp.close();
			} catch (Exception e2) {
			}
		}
	}

	public void doGet(Jacper jacper) {
		doPost(jacper);
	}

	public String StringFilter(String res) throws Exception {
		return res.replaceAll("[\\t\\n\\x0B\\f\\r\\\\\\/\\:\\*\\?\\\"\\<\\>\\|]","");
		//return res.replaceAll("[\\s|\\\\|\\/|\\:|\\*|\\?|\\\"|\\<|\\>|\\|,]", "");
	}

	public String getDeptId(Dept t) {
		Dept temp = t.getParent();
		String deptId = temp.getDeptId();
		if (temp != null) {
			if (temp.getDeptType().equals("1")) {
				deptId = t.getDeptId();
			} else {
				getDeptId(temp);
			}
		}
		return deptId;
	}
}
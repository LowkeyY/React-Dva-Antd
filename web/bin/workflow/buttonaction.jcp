
import java.util.*;
import java.io.IOException;
import com.kinglib.*;

import com.kinglib.workflow.Workflow;
import com.kinglib.workflow.basic.BasicWorkflow;
import com.kinglib.workflow.InvalidActionException;
import com.kinglib.workflow.InvalidEntryStateException;
import com.kinglib.workflow.WorkflowException;
import com.kinglib.workflow.config.DefaultConfiguration;
import com.kinglib.workflow.loader.*;
import com.kinglib.workflow.spi.*;

@class{

public void doGet(Jacper jacper){

		boolean isLogin = jacper.setSession();
		HttpSession hs = jacper.getSession();
		String user_id = hs.uid+"";

		String workflowId=jacper.getStr("workflowId");
		String instanceId=jacper.getStr("instanceId");
		String buttonId=jacper.getStr("buttonId");

		long entryId=jacper.getLong("entryId",-1);
		int flowType=jacper.getInt("flowType",0);

		long step_id = jacper.getLong("step_id",-1);

		Workflow wf = new BasicWorkflow(user_id);
		DefaultConfiguration config = new DefaultConfiguration();
		wf.setConfiguration(config);
		WorkflowDescriptor wd =  wf.getWorkflowDescriptor(instanceId);
		String  actionId=getAction(buttonId,wf,entryId,instanceId);
		boolean commentFlag= isComment(actionId,wf,instanceId);
		<?{success:true,actionId:'?>actionId<?',isComment:'?>commentFlag<?'}?>;
	}
	public boolean isComment (String actionId,Workflow wf,String instanceId) {
			boolean commentFlag=false;
			if(!actionId.equals("0")){
				WorkflowDescriptor wd =  wf.getWorkflowDescriptor(instanceId);
				ActionDescriptor ad=wd.getAction(Integer.parseInt(actionId));
				commentFlag=ad.isComment();
			}
			return commentFlag;
	}
	public String getAction (String buttonId,Workflow wf,long entryId,String instanceId){
		String actionId="0";	
		HashMap buttonMap=new HashMap();
		if(!instanceId.equals("")){
			WorkflowDescriptor wd =  wf.getWorkflowDescriptor(instanceId);
			if(entryId==-1){			
				List actList=wd.getInitialActions();
				for (Iterator it = actList.iterator(); it.hasNext();) {
					ActionDescriptor ad =(ActionDescriptor)it.next();
					Map actionMap=ad.getMetaAttributes();
					if(actionMap.containsKey("act_id")){
						actionId=ad.getId()+"";
					}else{
						if(actionMap.containsKey("button_id")){
							buttonMap.put(actionMap.get("button_id").toString(),ad.getId());
						}
					}
				}
			}else{
				List stepList=wf.getCurrentSteps(entryId);
				for (Iterator iterator = stepList.iterator(); iterator.hasNext();) {
						SimpleStep sp=(SimpleStep)iterator.next();
						int stepId =sp.getStepId();
						StepDescriptor sd=wd.getStep(stepId);
						List actList=sd.getActions();
						for (Iterator it = actList.iterator(); it.hasNext();) {
							ActionDescriptor ad =(ActionDescriptor)it.next();
							Map actionMap=ad.getMetaAttributes();
							if(actionMap.containsKey("button_id"))
								buttonMap.put(actionMap.get("button_id").toString(),ad.getId());
						}
				}
			}
			if(buttonMap.containsKey(buttonId))
					actionId=buttonMap.get(buttonId)+"";
		}
		return actionId;
	 }
}



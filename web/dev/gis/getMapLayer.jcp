
import java.util.*;
import com.kinglib.*;
import com.susing.sql.*;
import com.kinglib.util.json.*;
import com.kinglib.workbench.*;
import oracle.lbs.mapserver.*;
@class{
	                                              
public void doPost(Jacper jacper) {
	
	Connection conPlat = jacper.getConnection("plat");

	boolean isLogin = jacper.setSession();
	HttpSession hs = jacper.getSession();
	long user_id=hs.uid;

	String type = jacper.getStr("type");
	String parent_id = jacper.getStr("parent_id");
	String object_id = jacper.getStr("object_id");

	jacper.getResponse().setContentType("application/x-json");


	try{	
			JSONObject optionJSON = new JSONObject("{}");
			if(type.equals("new")){
				String option = jacper.getStr("option");
				if(option.equals("query")){
					ObjectNode queryNode=ObjectManager.getObject(object_id);
					ObjectNode appNode=queryNode.upTo(1);
					String appId=appNode.getId();
					String[][] query  = conPlat.get("select f.query_id,f.query_name from $[plat].app_query f,$[plat].object_base e where f.query_id=e.object_id and e.parent_id=? order by f.query_name",new String[]{appId+""});
					JSONArray jarr=new JSONArray();
					try{
						for(int i=0;i<query.length;i++){
							JSONObject items = new JSONObject("{}");
							items.put("id",query[i][0]);
							items.put("title",query[i][1]);
							jarr.put(items);
						}
						optionJSON.put("querys",jarr);
					}catch(Exception e){}
					<??>optionJSON.toString()<??>;
				}else if(option.equals("querycolumn")){
					String query_id=jacper.getStr("query_id");
					String[][] query_column  = conPlat.get("select column_name,column_name from $[plat].app_query_column  where query_id=? order by order_id",new String[]{query_id});
					JSONArray jarr=new JSONArray();
					try{
						for(int i=0;i<query_column.length;i++){
							JSONObject items = new JSONObject("{}");
							items.put("id",query_column[i][0]);
							items.put("title",query_column[i][1]);
							jarr.put(items);
						}
						optionJSON.put("queryColumns",jarr);
					}catch(Exception e){}
					<??>optionJSON.toString()<??>;
				}
			}else{
				JSONObject mapLayerJSON = new JSONObject("{}");

				String[] rs = conPlat.getRow("select group_id,object_id,name,logicname,layer_type,query_id,hasattribute,chart_type,data_column,id_column,name_column,attr_column,style_column,nbucket,basecolor,strockcolor,initradius,increradius,chartheigth,chartwidth,active,min_scale,max_scale,dblink,exp_item,search_id,spatial_store_type,seq,opacity,on_default from $[plat].map_layerbase where object_id=?",new String[]{object_id});
				
				mapLayerJSON.put("group_id",rs[0]);
				mapLayerJSON.put("object_id",rs[1]);
			
				mapLayerJSON.put("name",rs[2]);
				mapLayerJSON.put("logicname",rs[3]);

				mapLayerJSON.put("layer_type",rs[4]);
				mapLayerJSON.put("query_id",rs[5]);

				mapLayerJSON.put("hasattribute",rs[6]);
				mapLayerJSON.put("chart_type",rs[7]);
				mapLayerJSON.put("data_column",rs[8]);
				mapLayerJSON.put("id_column",rs[9]);
				mapLayerJSON.put("name_column",rs[10]);
				
				if(rs[11].length()!=0){
					JSONArray jarr=new JSONArray();
					String[] attrArray=rs[11].split(",");
					for(int i=0;i<attrArray.length;i++){
						jarr.put(attrArray[i]);
					}
					mapLayerJSON.put("attr_column",jarr);
				}else{
					mapLayerJSON.put("attr_column",rs[11]);
				}

				mapLayerJSON.put("style_column",rs[12]);
				mapLayerJSON.put("nbucket",rs[13]);
				mapLayerJSON.put("basecolor",rs[14]);
				mapLayerJSON.put("strockcolor",rs[15]);
				mapLayerJSON.put("initradius",rs[16]);
				mapLayerJSON.put("increradius",rs[17]);
				mapLayerJSON.put("chartheigth",rs[18]);
				mapLayerJSON.put("chartwidth",rs[19]);
				
				mapLayerJSON.put("active",rs[20]);
				mapLayerJSON.put("min_scale",rs[21]);
				mapLayerJSON.put("max_scale",rs[22]);

				mapLayerJSON.put("dblink",rs[23]);
				if(rs[24].length()!=0){
					JSONArray jarr=new JSONArray();
					String[] attrArray=rs[24].split(",");
					for(int i=0;i<attrArray.length;i++){
						jarr.put(attrArray[i]);
					}
					mapLayerJSON.put("exp_val",jarr);
				}else{
					mapLayerJSON.put("exp_val",rs[24]);
				}
				mapLayerJSON.put("searchId",rs[25]);
				mapLayerJSON.put("storeType",rs[26]);

				mapLayerJSON.put("seq",rs[27]);
				mapLayerJSON.put("opacity",rs[28]);
				mapLayerJSON.put("onDefault",rs[29]);

				ObjectNode node=ObjectManager.getObject(object_id);
				if(node!=null){
					mapLayerJSON.put("lastModifyTime",node.getLastModifyTime());
					mapLayerJSON.put("lastModifyName",node.getLastModifyName());
				}
			   <?[?>mapLayerJSON.toString()<?]?>;
		}
	}catch(Exception e){   
		e.printStackTrace();
	}finally{
		conPlat.close();
	}
}
}


import java.io.IOException;
import com.kinglib.*;
import com.kinglib.util.Numbers;
import java.util.*;
import java.util.Map;
import com.kinglib.util.*;
import java.util.Calendar;
import org.w3c.dom.NodeList;
import electric.xml.*;
import com.kinglibx.query.*;
import com.kinglib.util.json.*;
import com.kinglib.workbench.program.*;

import com.kinglib.bi.*;

@class{
	public void doGet(Jacper jacper){

	Connection conPlat = jacper.getConnection("plat");
	String query_id = jacper.getString("query_id","-1");
	String objectId="";

	if(query_id.equals("-1")){
		objectId=jacper.getStr("objectId");
		query_id =ProgramFactory.getInstance().getProgram(conPlat,objectId).getQueryId();
	}

	StringBuffer sb = new StringBuffer();
	String name ="";
	String title="";
	try{

		QueryExtendFactory queryEF=QueryExtendFactory.getInstance();
		QueryExtend QE=queryEF.getQueryExtend(conPlat,query_id);
		Query query =QE.getQuery();
		title=query.getName();
		name =new String(query.getName().getBytes("utf-8"),"iso-8859-1"); 
		String[] titles = query.getCells();

		String conString=QE.getConnectString();
		Connection conTmp =null;
		if(conString.length()!=0)
			conTmp=jacper.getConnection(conString);
		else
			conTmp=conPlat;

		Map p = Factory.newHashMap();
		String retQuery=jacper.getStr("query");
		if(retQuery.equals("")) 
			retQuery="{}";
		JSONObject searchJson=new JSONObject(retQuery);

		if(objectId.equals("")){
			p=QE.getAllQuerySearchCondition(jacper,conPlat,query,p,searchJson);
		}else{
			p=QE.getQueryImportCondition(jacper,conPlat,query_id+"");
			p=QE.getQuerySearchCondition(jacper,conPlat,query,p,searchJson);
		}

		String sql = query.parseSql(conPlat,titles,p); 

		sb.append("<Row ss:Height=\"20\"><Cell ss:MergeAcross=\""+(titles.length-1)+"\" ss:StyleID=\"s23\"><Data ss:Type=\"String\">"+title+"</Data></Cell></Row>");
		sb.append("<Row>");    

		for (int i = 0 ; i < titles.length ; i++){
			sb.append("<Cell><Data ss:Type=\"String\">").append(Strings.convertHTML(new String(titles[i].getBytes("utf-8"),"iso-8859-1"))).append("</Data></Cell>");
		}                                                         
		sb.append("</Row>");

		try{
			String[][] excelData=conTmp.get(sql,new String[]{},0);
			for (int i = 0 ; i < excelData.length ; i++){
				sb.append("<Row>");
				for (int j = 0 ; j< excelData[0].length;j++){
					sb.append("<Cell><Data ss:Type=\"String\">").append(Strings.convertHTML(excelData[i][j])).append("</Data></Cell>");
				} 	
				sb.append("</Row>");
			} 
			sb.append("\n");
		}catch(Exception e){
			e.printStackTrace();
		}finally{
			conTmp.close();
		}  
	}catch(Exception e){
		e.printStackTrace();
	}finally{
		conPlat.close();
	}

	String str = "<"+"?";
	String end = "?"+">\n";
	jacper.getResponse().setContentType("application/vnd.ms-excel");
	jacper.getResponse().setHeader("Content-Disposition", "attachment;filename="+query_id+".xls");
	jacper.getResponse().setHeader("Accept-ranges", "bytes");

	<?
	?>str<?xml version="1.0" encoding="utf-8"?>end<?
	?>str<?mso-application progid="Excel.Sheet"?>end<?
	<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"
	 xmlns:o="urn:schemas-microsoft-com:office:office"
	 xmlns:x="urn:schemas-microsoft-com:office:excel"
	 xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"
	 xmlns:html="http://www.w3.org/TR/REC-html40">
	 <Styles>
	  <Style ss:ID="Default" ss:Name="Normal">
	   <Alignment ss:Vertical="Center"/>
	   <Borders/>
	   <Font ss:FontName="宋体" x:CharSet="134" ss:Size="12"/>
	   <Interior/>
	   <NumberFormat/>
	   <Protection/>
	  </Style>
	  <Style ss:ID="s23">
	<Font ss:FontName="宋体" x:CharSet="134" ss:Size="15"/>
	<Alignment ss:Horizontal="Center" ss:Vertical="Bottom"/>
	</Style>
	  <Style ss:ID="s21">
	   <NumberFormat ss:Format="Short Date"/>
	  </Style>
	 </Styles>
	 <Worksheet ss:Name="Sheet1">
	  <Table x:FullColumns="1" x:FullRows="1" ss:DefaultColumnWidth="54" ss:DefaultRowHeight="14.25">
		?>sb.toString()<?
	  </Table>
	 </Worksheet>
	</Workbook>
	?>;
}
public void XMLPost(JacperXML jacper){

	Element xml;
	Connection conTemp =null;
	String server="";
	try{
		xml = jacper.getXML().getRoot();
	}catch(Exception ex){
		throw new KingleException(jacper.trans("整理XML文件错误"),ex);
	}
	String[][] query_info = new String[1][3];
	String id = "-1";
	query_info[0][0] = xml.getAttribute("name");
	query_info[0][1] = xml.getAttribute("where");

	query_info[0][2] = xml.getAttribute("level");
	NodeList cols = xml.getElement("columns").getChildNodes();
	int len = cols.getLength();
	String[][] column_info = new String[len][2];
	String[] cells = new String[len];
	for(int i=0;i<len;i++){
		Element e = (Element)cols.item(i);
		cells[i] = column_info[i][0] = e.getAttribute("name");
		column_info[i][1] = e.getAttribute("point");
	}

	NodeList imports = xml.getElement("import").getChildNodes();
	len = imports.getLength();
	Matrix mx = new Matrix(4);
	for(int i=0;i<len;i++){
		Element e = (Element)imports.item(i);
		String rename = e.getAttribute("rename");
		String name = e.getAttribute("name");
		server =e.getAttribute("server");
		NodeList l = e.getElement("param").getChildNodes();
		int size = l.getLength();

		if(size>1){
			for(int j=0;j<size;j++){
				Element o = (Element)l.item(j);
				mx.add(new String[]{rename,name,o.getAttribute("name"),o.getAttribute("value")});
			}
		}else
			mx.add(new String[]{rename,name,"",""});			
	}
	String[][] import_info = mx.toArray();

	NodeList params = xml.getElement("param").getChildNodes();
	len = params.getLength();

	String[][] param_info = new String[len][6];
	Map map = Factory.newHashMap();

	for(int i=0;i<len;i++){
		Element e = (Element)params.item(i);
		String name = e.getAttribute("name");
		String value = e.getAttribute("value");


		value=DefaultValue.getInstance().replace(jacper,value);

		param_info[i][0] = name;
		param_info[i][1] = e.getAttribute("perfix");
		param_info[i][2] = e.getAttribute("suffix");
		param_info[i][3] = e.getAttribute("notnull");
		param_info[i][4] = e.getAttribute("utype");
		param_info[i][5] = e.getAttribute("default");
		map.put(name,value);
	}

	Query q = new Query(id,query_info,column_info,import_info,param_info);
	Connection conPlat= jacper.getConnection("plat");
	String sql = q.parseSql(conPlat,cells,map);
	conTemp = jacper.getConnection(server);
	StringBuffer sb = new StringBuffer();

	try{
		sb.append("<Row>");    
		for (int i = 0 ; i < cells.length ; i++){
			sb.append("<Cell><Data ss:Type=\"String\">").append(Strings.convertHTML(new String(cells[i].getBytes("utf-8"),"iso-8859-1"))).append("</Data></Cell>");
		}                                                         
		sb.append("</Row>");
		String[][] excelData=conTemp.get(sql,new String[]{},0);
		for (int i = 0 ; i < excelData.length ; i++){
			sb.append("<Row>");
			for (int j = 0 ; j< excelData[0].length;j++){
				sb.append("<Cell><Data ss:Type=\"String\">").append(Strings.convertHTML(excelData[i][j])).append("</Data></Cell>");
			} 	
			sb.append("</Row>");
		} 
		sb.append("\n");
	}catch(Exception e){
		e.printStackTrace();
	}finally{
		conTemp.close();
	} 

	String str = "<"+"?";
	String end = "?"+">\n";
	jacper.getResponse().setContentType("application/vnd.ms-excel");
	jacper.getResponse().setHeader("Content-Disposition", "attachment;filename=preview.xls");
	jacper.getResponse().setHeader("Accept-ranges", "bytes");

	<?
	?>str<?xml version="1.0" encoding="utf-8"?>end<?
	?>str<?mso-application progid="Excel.Sheet"?>end<?
	<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"
	 xmlns:o="urn:schemas-microsoft-com:office:office"
	 xmlns:x="urn:schemas-microsoft-com:office:excel"
	 xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"
	 xmlns:html="http://www.w3.org/TR/REC-html40">
	 <Styles>
	  <Style ss:ID="Default" ss:Name="Normal">
	   <Alignment ss:Vertical="Center"/>
	   <Borders/>
	   <Font ss:FontName="宋体" x:CharSet="134" ss:Size="12"/>
	   <Interior/>
	   <NumberFormat/>
	   <Protection/>
	  </Style>
	  <Style ss:ID="s23">
	<Font ss:FontName="宋体" x:CharSet="134" ss:Size="15"/>
	<Alignment ss:Horizontal="Center" ss:Vertical="Bottom"/>
	</Style>
	  <Style ss:ID="s21">
	   <NumberFormat ss:Format="Short Date"/>
	  </Style>
	 </Styles>
	 <Worksheet ss:Name="Sheet1">
	  <Table x:FullColumns="1" x:FullRows="1" ss:DefaultColumnWidth="54" ss:DefaultRowHeight="14.25">
		?>sb.toString()<?
	  </Table>
	 </Worksheet>
	</Workbook>
	?>;
} 
}

